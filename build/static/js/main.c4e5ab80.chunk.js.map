{"version":3,"sources":["services/card.js","reducers/cardReducer.js","reducers/userReducer.js","reducers/loginReducer.js","reducers/selectCardReducer.js","services/message.js","reducers/messageReducer.js","store.js","components/Stopwatch.js","components/GoalCard.js","components/GoalCardList.js","components/CardForm.js","services/login.js","services/user.js","components/LoginForm.js","components/About.js","components/Logout.js","components/HSGoalCard.js","components/Highscores.js","components/NavBar.js","components/MyPlants.js","components/Chat.js","App.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","then","del","delete","setToken","newToken","refreshPage","window","location","reload","createCard","dispatch","cardService","newCard","type","setCardNote","newNote","cardReducer","state","action","concat","targetNote","cardToComment","find","n","changedCardNote","notes","note","map","card","setInfo","userInfo","console","log","userReducer","setLogin","user","loginReducer","selectCardReducer","createMessage","messageService","newMessage","messageReducer","reducer","combineReducers","cards","login","messages","store","createStore","composeWithDevTools","applyMiddleware","thunk","Stopwatch","dif","goalTime","Date","getTime","secsFrom","days","Math","abs","avrundDays","floor","hoursLeft","avrundHours","minsLeft","minFloor","secsLeftMin","secsFloor","useState","setTime","running","useEffect","interval","setInterval","prevTime","clearInterval","className","GoalCard","goal","useDispatch","setNewNote","tdate","date","delCard","deleteCard","addNote","event","preventDefault","testArray","name","onSubmit","value","onChange","target","onClick","GoalCardList","userName","useSelector","owner","CardForm","addCard","content","random","toFixed","newA","ndate","count","credentials","createNew","newUser","LoginForm","username","setUsername","password","setPassword","newUsername","setNewUsername","newName","setName","newpasswd","setNewPasswd","setUser","errorMessage","setErrorMessage","loginVisible","setLoginVisible","createVisible","setLoginVisible2","handleLogin","loginService","localStorage","setItem","JSON","stringify","setTimeout","handleRegister","userService","hideWhenVisible","display","showWhenVisible","hideWhenVisible2","showWhenVisible2","style","loginForm","About","handleLogout","clear","HSGoalCard","Highscores","index","NavBar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","Collapse","to","Link","title","Item","Divider","eventKey","MyPlants","Chat","messageA","message","setMessage","messageArray","addMessage","lol","App","loggedUserJSON","getItem","parse","path","component","Logout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4e5ab80.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/cards'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n    return response.data\r\n  }\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst del = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getAll, create, update, del, setToken}","import cardService from '../services/card'\r\n\r\nconst cardReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'NEW_CARD':\r\n      return state.concat(action.data)\r\n    case 'INIT_CARDS':\r\n      return action.data\r\n    case \"DELETE\":\r\n      return refreshPage()\r\n    case 'NOTE':\r\n      const targetNote = action.id\r\n      const cardToComment = state.find(n => n.id === targetNote)\r\n      const changedCardNote = { \r\n          ...cardToComment, \r\n          notes: cardToComment.notes.concat(action.note)\r\n      }\r\n      return state.map(card =>\r\n          card.id !== targetNote ? card : changedCardNote \r\n      )\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//Refresh page\r\nfunction refreshPage(){\r\n  window.location.reload()\r\n}\r\n\r\nexport const createCard = (newObject) => {\r\n  return async dispatch => {\r\n    const newCard = await cardService.create(newObject)\r\n    dispatch({\r\n      type: 'NEW_CARD',\r\n      data: newCard,\r\n    })\r\n  }\r\n}\r\n//Delete card\r\nexport const deleteCard = (id) => {\r\n  return async dispatch => {\r\n    await cardService\r\n    .del(id)\r\n    dispatch({\r\n      type:'DELETE'\r\n    })\r\n  }\r\n  \r\n}\r\n\r\n//Set notes\r\nexport const setCardNote = (id, newObject) => {\r\n  return async dispatch => {\r\n    const newNote = await cardService.update(id, newObject)\r\n    dispatch({\r\n      type: 'NOTE',\r\n      id: id,\r\n      data: newNote\r\n    })\r\n  }\r\n}\r\n\r\nexport const initializeCards = () => {\r\n    return async dispatch => {\r\n      const cards = await cardService.getAll()\r\n      console.log(cards)\r\n      dispatch({\r\n        type: 'INIT_CARDS',\r\n        data: cards,\r\n      })\r\n    }\r\n  }\r\n\r\n  export default cardReducer","const userInfo = null\r\n\r\nconst userReducer = (state = userInfo, action) => {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInfo = (userInfo) => {\r\n    console.log(\"kokeilen userinfoa: \",userInfo.token)\r\n    return {\r\n        type: 'SET_USER',\r\n        data: userInfo\r\n    }\r\n}\r\n\r\nexport default userReducer","\r\nconst user = null\r\n\r\nconst loginReducer = (state = user, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            if (action.user === null){\r\n                return null\r\n            } else {\r\n                const user = action.user\r\n                return user\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setLogin = user => {\r\n    return async dispatch => {\r\n        \r\n        dispatch({\r\n          type:'LOGIN',\r\n          user\r\n        })\r\n    }\r\n}\r\n\r\nexport default loginReducer","const selectedCard = null\r\n\r\nconst selectCardReducer = (state = selectedCard, action) => {\r\n    switch (action.type) {\r\n      case 'SET_CARD':\r\n        return action.data\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const setSelectedCard = (card) => {\r\n    return {\r\n      type: 'SET_CARD',\r\n      data: card,\r\n    }\r\n  }\r\n  \r\n  export default selectCardReducer","import axios from 'axios'\r\nconst baseUrl = '/api/messages'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n    return response.data\r\n  }\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  console.log(\"Testi taas\",token)\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst del = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, del, setToken}","import messageService from '../services/message'\r\n\r\nconst messageReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'NEW_MESSAGE':\r\n      return state.concat(action.data)\r\n    case 'SET_MESSAGES':\r\n      return action.data\r\n    case \"DELETE\":\r\n      return refreshPage()\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//Refresh page\r\nfunction refreshPage(){\r\n  window.location.reload()\r\n}\r\n\r\nexport const createMessage = (newObject) => {\r\n  return async dispatch => {\r\n    const newMessage = await messageService.create(newObject)\r\n    dispatch({\r\n      type: 'NEW_MESSAGE',\r\n      data: newMessage,\r\n    })\r\n  }\r\n}\r\n//Delete card\r\nexport const deleteMessage = (id) => {\r\n  return async dispatch => {\r\n    await messageService\r\n    .del(id)\r\n    dispatch({\r\n      type:'DELETE'\r\n    })\r\n  }\r\n  \r\n}\r\n\r\n\r\nexport const setMessages = () => {\r\n    return async dispatch => {\r\n      const messages = await messageService.getAll()\r\n      console.log(\"MessageReducer: \", messages)\r\n      dispatch({\r\n        type: 'SET_MESSAGES',\r\n        data: messages,\r\n      })\r\n    }\r\n}\r\n\r\nexport default messageReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport cardReducer from './reducers/cardReducer' \r\nimport userReducer from './reducers/userReducer'\r\nimport loginReducer from './reducers/loginReducer'\r\nimport selectCardReducer from './reducers/selectCardReducer'\r\nimport messageReducer from './reducers/messageReducer'\r\n\r\nconst reducer = combineReducers({\r\n  cards: cardReducer,\r\n  card: selectCardReducer,\r\n  userInfo: userReducer,\r\n  login: loginReducer,\r\n  messages: messageReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store","import React, { useState, useEffect } from \"react\";\r\n\r\n\r\nconst Stopwatch = ({goalTime}) => {\r\n    \r\n\r\n    //calculations\r\n\r\n    const fdate = new Date().getTime()\r\n    const dif = goalTime - fdate\r\n        \r\n    //Seconds\r\n    const secsFrom = dif / 1000\r\n    const secsBetween = Math.abs(secsFrom)\r\n\r\n    //Calculate separate d,h,m,s\r\n    const days = secsBetween / 86400\r\n    const avrundDays = Math.floor(days)\r\n    const timeLeft = days - avrundDays\r\n        //hours\r\n    const secsLeftDay = timeLeft * 86400\r\n    const hoursLeft = secsLeftDay / 3600\r\n    const avrundHours = Math.floor(hoursLeft)\r\n\r\n        //minutes\r\n    const secsLeftHours = (hoursLeft - avrundHours) * 3600\r\n    const minsLeft = secsLeftHours / 60\r\n    const minFloor = Math.floor(minsLeft)\r\n        //seconds\r\n    const secsLeftMin = (minsLeft - minFloor) * 60\r\n    const secsFloor= Math.floor(secsLeftMin)\r\n\r\n    //console.log(\"Stopwatch: \", avrundHours, secsLeftHours, secsLeftMin)\r\n    //console.log(\"Here are results: \", avrundDays, avrundHours, minFloor, secsFloor)\r\n    //Next lets get those numbers into a usestate that updates   \r\n    \r\n    \r\n    const [time, setTime] = useState(dif);\r\n    const [running, setRunning] = useState(true);\r\n\r\n    useEffect(() => {\r\n      let interval;\r\n      if (running) {\r\n        interval = setInterval(() => {\r\n          setTime((prevTime) => prevTime + 1000);\r\n        }, 1000);\r\n      } else if (!running) {\r\n        clearInterval(interval);\r\n      }\r\n      return () => clearInterval(interval);\r\n    }, [running]);\r\n    return (\r\n      <div className=\"stopwatch\">\r\n        <div className=\"numbers\">\r\n          <div>{(\"Days: \" + avrundDays)}</div><hr></hr>\r\n          <div>{(\"Hours: \" + avrundHours)}</div><hr></hr>\r\n          <div>{(\"Minutes: \" + minFloor)}</div><hr></hr>\r\n          <div>{(\"Seconds: \" + secsFloor)}</div><hr></hr>\r\n          \r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\nexport default Stopwatch;\r\n\r\n\r\n\r\n/* Buttons for stop and reset if needed\r\n<div className=\"buttons\">\r\n          <button onClick={() => setRunning(true)}>Start</button>\r\n          <button onClick={() => setRunning(false)}>Stop</button>\r\n          <button onClick={() => setTime(dif)}>Reset</button>       \r\n        </div>\r\n\r\n\r\n*/","import React from 'react';\r\nimport { deleteCard, setCardNote } from '../reducers/cardReducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Stopwatch from './Stopwatch';\r\nimport { useState } from 'react';\r\nimport { setSelectedCard } from '../reducers/selectCardReducer';\r\n\r\nconst GoalCard = ({goal}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [newNote, setNewNote] = useState('')\r\n\r\n    //Start date\r\n    const tdate = goal.date\r\n    const newdate = new Date().getTime()\r\n    const dif = tdate - newdate\r\n    const secsFrom = dif / 1000\r\n    const secsBetween = Math.abs(secsFrom)\r\n    const days = secsBetween / 86400\r\n    //Days since plant seeded to now\r\n    const avrundDays = Math.floor(days)\r\n\r\n\r\n    //Delete Goalcard\r\n    const delCard = (id) => {\r\n        console.log(\"Toimii tähän: \", id)\r\n        dispatch(deleteCard(id))\r\n    }\r\n\r\n    //Add note\r\n    const addNote = async (event) => {\r\n        event.preventDefault()\r\n        const newObject = goal\r\n        const note = \"Day \"+avrundDays+\": \"+newNote\r\n        newObject.notes = newObject.notes.concat(note)\r\n        dispatch(setCardNote(goal.id, newObject))\r\n    }\r\n    const handleNote = (event) => {\r\n        setNewNote(event.target.value)\r\n    }\r\n\r\n    const testArray = goal.notes\r\n    console.log(\"Testarray: \",testArray)\r\n\r\n    return (\r\n        <div className='card'>\r\n            <h1>{goal.name}</h1>\r\n            <hr></hr>\r\n            <Stopwatch goalTime={tdate}/>\r\n            <form onSubmit= {addNote}>\r\n                <input value={newNote} onChange={handleNote}/>\r\n                <button type=\"submit\">Add note</button>\r\n            </form>\r\n            <h3>Updates:</h3>\r\n            {goal.notes.map((note) => (\r\n                <p>{note}</p>\r\n            ))}\r\n\r\n            <button onClick={()=>delCard(goal.id)}>Delete</button>\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  export default GoalCard","import GoalCard from './GoalCard'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst GoalCardList = ({userName}) => {\r\n\r\n    const cards = useSelector(({cards}) => {\r\n        return cards\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {cards.map(goal => {\r\n                if (goal.owner === userName){\r\n                    return <GoalCard key={goal.id} goal={goal} />\r\n                }\r\n            }\r\n                \r\n                \r\n            )}\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  export default GoalCardList\r\n\r\n  /* all cards rendered\r\n            {cards.map(goal => \r\n                <GoalCard key={goal.id} goal={goal} />\r\n            )}\r\n  */","import { useDispatch } from 'react-redux'\r\nimport { createCard } from '../reducers/cardReducer'\r\n\r\nconst CardForm = ({user}) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const id = () => (100000 * Math.random()).toFixed(0)\r\n\r\n  const addCard = async (event) => {\r\n    event.preventDefault()\r\n    const content = event.target.card.value\r\n    const newId = id()\r\n    const newA = []\r\n    const ndate = new Date().getTime()\r\n    const userName = user\r\n    console.log(\"CARDFORM: \",ndate)\r\n    event.target.card.value = ''\r\n    const newCard = {\r\n      name: content,\r\n      count: 0,\r\n      date: ndate,\r\n      owner: userName,\r\n      notes: newA\r\n    }\r\n    console.log(\"Hejhej: \", content, userName)\r\n    \r\n    dispatch(createCard(newCard))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <h2>create new</h2>\r\n        <form onSubmit={addCard} >\r\n            <div><input name='card'/></div>\r\n            <button type='submit'>create card</button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardForm","import axios from 'axios'\r\nconst baseUrl = '/api/login' \r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  console.log(\"Login success I think: \", response.data)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import axios from 'axios'\r\nconst baseUrl = '/api/users' \r\n\r\nconst createNew = async newUser => {\r\n  const response = await axios.post(baseUrl, newUser)\r\n  return response.data\r\n}\r\n\r\nexport default { createNew }","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useDispatch} from 'react-redux'\r\nimport loginService from '../services/login'\r\nimport { setLogin } from '../reducers/loginReducer'\r\nimport cardService from '../services/card'\r\nimport userService from '../services/user'\r\nimport { setInfo } from '../reducers/userReducer'\r\n\r\nconst LoginForm = () => {\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [newUsername, setNewUsername] = useState('')\r\n  const [newName, setName] = useState('')\r\n  const [newpasswd, setNewPasswd] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [loginVisible, setLoginVisible] = useState(false)\r\n  const [createVisible, setLoginVisible2] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  /*\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedPlantappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      // setUser(user)\r\n      dispatch(setLogin(user))\r\n      cardService.setToken(user.token)\r\n      console.log(\"User: \", loggedUserJSON)\r\n    }\r\n  },[dispatch])*/\r\n\r\n\r\n  //Handle login\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n      cardService.setToken(user.token)\r\n      //local storage\r\n      window.localStorage.setItem(\r\n        'loggedPlantappUser', JSON.stringify(user)\r\n      )\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n      console.log(\"Kokeilen user dataa: \", user)\r\n      dispatch(setLogin(user))\r\n      dispatch(setInfo(user))\r\n    } catch (exception) {\r\n      setErrorMessage('Wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  //Handle register\r\n  const handleRegister = async (event) => {\r\n    event.preventDefault()\r\n    const username = newUsername\r\n    const name = newName\r\n    const password = newpasswd\r\n    try {\r\n      const user = await userService.createNew({\r\n        username, name, password,\r\n      })\r\n      console.log(\"Registered \", user)\r\n      setErrorMessage(\"Your account has been registered!\")\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n     \r\n      \r\n    } catch (exception) {\r\n      setErrorMessage('Something went wrong!')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    } \r\n\r\n  }\r\n\r\n  //Not-logged-in window\r\n  const loginForm = () => {\r\n    const hideWhenVisible = { display: loginVisible ? 'none' : '' }\r\n    const showWhenVisible = { display: loginVisible ? '' : 'none' }\r\n\r\n    const hideWhenVisible2 = { display: createVisible ? 'none' : '' }\r\n    const showWhenVisible2 = { display: createVisible ? '' : 'none' }\r\n\r\n    return(\r\n      <div className='loginform'>\r\n        <div style={hideWhenVisible}>\r\n          <button onClick={() => setLoginVisible(true)}>log in</button>\r\n        </div>\r\n        <div style={showWhenVisible}>\r\n          <form onSubmit={handleLogin}>\r\n            <div>\r\n              username\r\n                <input\r\n                type=\"text\"\r\n                value={username}\r\n                name=\"Username\"\r\n                onChange={({ target }) => setUsername(target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              password\r\n                <input\r\n                type=\"password\"\r\n                value={password}\r\n                name=\"Password\"\r\n                onChange={({ target }) => setPassword(target.value)}\r\n              />\r\n            </div>\r\n            <button type=\"submit\">login</button>\r\n          </form>\r\n          \r\n          <button onClick={() => setLoginVisible(false)}>cancel</button>\r\n        </div>\r\n\r\n\r\n\r\n        <div style={hideWhenVisible2}>\r\n          <button onClick={() => setLoginVisible2(true)}>Create account</button>\r\n        </div>\r\n        <div style={showWhenVisible2}>\r\n          <form onSubmit={handleRegister}>\r\n        \r\n            <div>\r\n              username\r\n                <input\r\n                type=\"text\"\r\n                value={newUsername}\r\n                name=\"Username\"\r\n                onChange={({ target }) => setNewUsername(target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              name\r\n                <input\r\n                type=\"text\"\r\n                value={newName}\r\n                name=\"Name\"\r\n                onChange={({ target }) => setName(target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              password\r\n                <input\r\n                type=\"password\"\r\n                value={newpasswd}\r\n                name=\"Passwd\"\r\n                onChange={({ target }) => setNewPasswd(target.value)}\r\n              />\r\n            </div>\r\n            <button type=\"submit\">Register</button>\r\n          </form>\r\n          \r\n          <button onClick={() => setLoginVisible2(false)}>cancel</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      \r\n          <div className='login'>\r\n            <h2>Login</h2>\r\n            {loginForm()}\r\n          </div>\r\n           \r\n          \r\n        \r\n      <p>{errorMessage}</p>\r\n      \r\n      <br/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React from 'react';\r\n\r\n\r\nconst About = () => {\r\n\r\n   \r\n    return (\r\n        <div>\r\n            <h2>Welcome to plant timer</h2>\r\n            <p>The purpose of this app is to take time of your plants while they are growing. You can write updates to your plants and publish them.</p>\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  export default About","import React from 'react'\r\n\r\n\r\nconst LoginForm = ({user}) => {\r\n\r\n    //Handle log-out\r\n    const handleLogout = async (event) => {\r\n        event.preventDefault()\r\n        //dispatch(setInfo(null))\r\n        window.localStorage.clear()\r\n        window.location.reload();\r\n    }\r\n\r\n    return(\r\n        <div className='logout'>\r\n            <p>{user} logged-in</p>\r\n            <button onClick={handleLogout}>Log out</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LoginForm","import React from 'react';\r\nimport { deleteCard, setCardNote } from '../reducers/cardReducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Stopwatch from './Stopwatch';\r\nimport { useState } from 'react';\r\nimport { setSelectedCard } from '../reducers/selectCardReducer';\r\n\r\nconst HSGoalCard = ({goal}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [newNote, setNewNote] = useState('')\r\n\r\n    //Start date\r\n    const tdate = goal.date\r\n    const newdate = new Date().getTime()\r\n    const dif = tdate - newdate\r\n    const secsFrom = dif / 1000\r\n    const secsBetween = Math.abs(secsFrom)\r\n    const days = secsBetween / 86400\r\n    //Days since plant seeded to now\r\n    const avrundDays = Math.floor(days)\r\n\r\n\r\n\r\n\r\n    const testArray = goal.notes\r\n    console.log(\"Testarray: \",testArray)\r\n\r\n    return (\r\n        <div className='card'>\r\n            <h1>{goal.name}</h1>\r\n            <p>Owner: {goal.owner}</p>\r\n            <hr></hr>\r\n            <h2>Time: {avrundDays} days</h2>\r\n            \r\n            <h3>Updates:</h3>\r\n            {goal.notes.map((note) => (\r\n                <p>{note}</p>\r\n            ))}\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  export default HSGoalCard","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport HSGoalCard from './HSGoalCard';\r\n\r\nconst Highscores = () => {\r\n\r\n    const cards = useSelector(({cards}) => {\r\n        return cards\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Highscores</h2>\r\n            <p>Oldest plants in the PlantApp history.</p>\r\n\r\n            {cards.map((goal, index) => {\r\n                return(\r\n                    <div>\r\n                        <hr></hr>\r\n                        <p>Rank. {  index+1 }</p>\r\n                        <HSGoalCard key={goal.id} goal={goal} />\r\n                    </div>\r\n                )\r\n            })}\r\n\r\n                \r\n            \r\n        </div>\r\n    )\r\n  }\r\n  \r\n  export default Highscores","import React from 'react';\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <ReactBootStrap.Navbar collapseOnSelect expand=\"xl\" bg=\"dark\" variant=\"dark\">\r\n            <ReactBootStrap.Navbar.Brand href=\"#home\">Plant timer</ReactBootStrap.Navbar.Brand>\r\n            <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <ReactBootStrap.Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <ReactBootStrap.Nav className=\"mr-auto\"> \r\n                <Link to=\"/about\">\r\n                <ReactBootStrap.Nav.Link href=\"#about\">About</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n                <Link to=\"/highscores\">\r\n                <ReactBootStrap.Nav.Link href=\"#highscores\">Highscores</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n                <ReactBootStrap.NavDropdown title=\"YEET\" id=\"collasible-nav-dropdown\">\r\n                    <ReactBootStrap.NavDropdown.Item href=\"#action/3.1\">Action</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Item href=\"#action/3.2\">Another action</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Item href=\"#action/3.3\">Something</ReactBootStrap.NavDropdown.Item>\r\n                    <ReactBootStrap.NavDropdown.Divider />\r\n                    <ReactBootStrap.NavDropdown.Item href=\"#action/3.4\">Separated link</ReactBootStrap.NavDropdown.Item>\r\n                </ReactBootStrap.NavDropdown>\r\n                </ReactBootStrap.Nav>\r\n                <ReactBootStrap.Nav>\r\n                <Link to=\"/chat\">\r\n                <ReactBootStrap.Nav.Link href=\"#chat\">Chat with others</ReactBootStrap.Nav.Link>\r\n                </Link>\r\n                <Link to=\"/myplants\">\r\n                <ReactBootStrap.Nav.Link eventKey={2} href=\"#myplants\">\r\n                    My plants\r\n                </ReactBootStrap.Nav.Link>\r\n                </Link>\r\n                </ReactBootStrap.Nav>\r\n            </ReactBootStrap.Navbar.Collapse>\r\n            </ReactBootStrap.Navbar>\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  export default NavBar","import React from 'react';\r\nimport Logout from './Logout'\r\nimport CardForm from './CardForm';\r\nimport GoalCardList from './GoalCardList';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst MyPlants= () => {\r\n\r\n    //User\r\n    const userInfo = useSelector(({userInfo}) => {\r\n        console.log(\"HEj user här i app:\", userInfo)\r\n        return userInfo\r\n    })\r\n    return(\r\n        <div>\r\n            <h1>My plants</h1>\r\n            <div>\r\n            \r\n            <CardForm user={userInfo.name}/>\r\n            <GoalCardList userName={userInfo.name}/>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPlants;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { createMessage, deleteMessage } from '../reducers/messageReducer';\r\nimport messageService from '../services/message'\r\n\r\nconst Chat = () => {\r\n\r\n    const dispatch = useDispatch() \r\n\r\n    //User\r\n    const userInfo = useSelector(({userInfo}) => {\r\n        console.log(\"HEj user här i app:\", userInfo)\r\n        return userInfo\r\n    })\r\n    //messages\r\n    const messageA = useSelector(({messages}) => {\r\n        console.log(\"Messages:\", messages)\r\n        return messages\r\n    })\r\n\r\n    const [message, setMessage] = useState(\"\")\r\n    const messageArray = [\"hej\"]\r\n\r\n    const handleMessage = (event) => {\r\n        setMessage(event.target.value)\r\n    }\r\n\r\n    //Add message\r\n    const addMessage = async (event) => {\r\n        event.preventDefault()\r\n        const yo = messageArray.concat(message)\r\n        console.log(\"UROb här: \", userInfo.username)\r\n        messageService.setToken(userInfo.token)\r\n        const content = message\r\n        //const userId = userInfo.id\r\n        const newMessage = {\r\n            content: content,\r\n            username: userInfo.username\r\n        }\r\n        console.log(\"TEsti: \",newMessage)\r\n        dispatch(createMessage(newMessage))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1 className='chatHeader'>Chat with other users</h1>\r\n            <div className='parentDiv'>\r\n                {messageA.map((lol) => {\r\n                    \r\n                    return(\r\n                        <div>\r\n                            <h3>{lol.username}</h3>\r\n                            <p>{lol.content}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n                    \r\n                    \r\n            </div>\r\n            {userInfo === null ?\r\n                <p className='addMesForm'>Log in to send messages!</p>\r\n                :\r\n                <form onSubmit= {addMessage} className=\"addMesForm\">\r\n                    <input value={message} onChange={handleMessage}/>\r\n                <button type=\"submit\">Send</button>\r\n                </form>\r\n            }\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Chat;","import React, {useEffect, useState} from 'react'\r\nimport { initializeCards } from './reducers/cardReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n//Components\r\nimport GoalCardList from './components/GoalCardList'\r\nimport CardForm from './components/CardForm'\r\nimport LoginForm from './components/LoginForm'\r\nimport About from './components/About'\r\nimport Logout from './components/Logout'\r\nimport Highscores from './components/Highscores'\r\n//Services\r\n\r\nimport cardService from './services/card'\r\n//Reducers\r\nimport { setInfo } from './reducers/userReducer'\r\nimport Navbar from './components/NavBar'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport MyPlants from './components/MyPlants'\r\nimport Chat from './components/Chat'\r\nimport messageService from './services/message'\r\nimport { setMessages } from './reducers/messageReducer'\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [userName, setUserName] = useState(\"\")\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n      dispatch(initializeCards())\r\n      dispatch(setMessages()) \r\n  },[dispatch]) \r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedPlantappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      // setUser(user)\r\n      dispatch(setInfo(user))\r\n      cardService.setToken(user.token)\r\n    }\r\n  },[dispatch])\r\n\r\n\r\n  //Getting User from store\r\n  const userInfo = useSelector(({userInfo}) => {\r\n      return userInfo\r\n  })\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/home\" >\r\n            <div className='startDiv'>\r\n              <h1>PlantApp</h1>\r\n              <p>With plantapp you can set timer on your newly grown plants and add notes to them while they grow. You can also see other people's plants and chat with other users</p>\r\n            </div>\r\n          \r\n          </Route>\r\n          <Route path=\"/about\" component={About}>\r\n              <About />\r\n          </Route>\r\n          <Route path=\"/highscores\" component={Highscores}>\r\n              <Highscores />\r\n          </Route>\r\n          <Route path=\"/chat\" component={Chat}>\r\n              <Chat />\r\n          </Route>\r\n          <Route path=\"/myplants\" component={MyPlants}>\r\n            {userInfo === null ?\r\n            <div className='startDiv'>\r\n              <p>To see your plants, please log in!</p>\r\n              \r\n            </div> \r\n            :\r\n            <div>\r\n              <MyPlants />\r\n            </div>\r\n            }\r\n          </Route>\r\n          \r\n        </Switch>       \r\n      </Router>\r\n      {userInfo === null ?\r\n          <div>\r\n            <LoginForm/>\r\n          </div>\r\n          :\r\n          <div>\r\n            <Logout user={userInfo.name}/>\r\n          </div>\r\n          }\r\n      \r\n    \r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux' \r\nimport store from './store'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}